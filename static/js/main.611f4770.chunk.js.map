{"version":3,"sources":["index.js"],"names":["Main","React","useState","login","setLogin","username","setUsername","passwd","setPasswd","status","setStatus","loading","setLoading","handleNameChange","event","target","value","handlePasswdChange","className","htmlFor","id","onChange","autoComplete","type","onClick","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","last","class","Created","ReactDOM","render","document","getElementById"],"mappings":"oMAIA,SAASA,IACP,MAA0BC,IAAMC,UAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCH,IAAMC,SAAS,IAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BL,IAAMC,SAAS,IAA3C,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4BP,IAAMC,SAAS,IAA3C,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA8BT,IAAMC,UAAS,GAA7C,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,SAASC,EAAiBC,GACxBR,EAAYQ,EAAMC,OAAOC,OAE3B,SAASC,EAAmBH,GAC1BN,EAAUM,EAAMC,OAAOC,OAiDzB,OACE,gCACGb,GACC,qBAAKe,UAAU,OAAf,SACE,sBAAKA,UAAU,OAAf,UACE,6BAAgB,KAAXT,EAAgB,uBAAYA,IACjC,uBAAOU,QAAQ,WAAWD,UAAU,QAApC,sBAFF,WAME,uBACEE,GAAG,WACHJ,MAAOX,EACPgB,SAAUR,EACVK,UAAU,QACVI,aAAa,QAEf,uBACA,uBACA,uBAAOH,QAAQ,WAAWD,UAAU,QAApC,sBAfF,eAmBE,uBACEE,GAAG,SACHG,KAAK,WACLP,MAAOT,EACPc,SAAUJ,EACVC,UAAU,QACVI,aAAa,QAEf,uBACA,uBACA,wBACEE,QAjFZ,WAEE,GADAZ,GAAW,GACM,KAAbP,GAA8B,KAAXE,EAAe,CACpC,IAAMkB,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEzB,SAAUA,EAAUE,OAAQA,KAErDwB,MACE,qDACAN,GAECO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEDzB,EADK,OAATyB,EACc,gBAAkBA,EAAK9B,SACvB,8BACdO,GAAW,WAGfF,EAAU,2BACVE,GAAW,IA6DHM,UAAYP,EAAsB,mBAAZ,UAFxB,oBAMA,uBACA,uBACA,oCACA,wBAAQa,QAAS,kBAAMpB,GAAS,IAAQc,UAAU,UAAlD,qBAGA,yCAIJf,GACA,qBAAKiC,MAAM,OAAX,SACE,sBAAKlB,UAAU,OAAf,UACE,6BAAgB,KAAXT,EAAgB,uBAAYA,IACjC,uBAAOU,QAAQ,WAAWD,UAAU,QAApC,sBAFF,WAME,uBACEE,GAAG,WACHJ,MAAOX,EACPa,UAAU,QACVG,SAAUR,EACVS,aAAa,QAEf,uBACA,uBACA,uBAAOH,QAAQ,WAAWD,UAAU,QAApC,sBAfF,eAmBE,uBACEE,GAAG,SACHJ,MAAOT,EACPW,UAAU,QACVG,SAAUJ,EACVM,KAAK,WACLD,aAAa,KAEf,uBACA,uBACA,wBACEE,QAxGZ,WACE,GAAiB,KAAbnB,GAA8B,KAAXE,EAAe,CACpCK,GAAW,GACX,IAAMa,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEzB,SAAUA,EAAUE,OAAQA,KAErDwB,MACE,sDACAN,GAECO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACY,OAAjBA,EAAKE,QACD3B,EAAU,oBACVA,EAAU,0BACdE,GAAW,WAGfF,EAAU,4BAqFFQ,UAAYP,EAAsB,mBAAZ,UAFxB,qBAMA,uBACA,uBACA,oCACA,wBAAQa,QAAS,kBAAMpB,GAAS,IAAOc,UAAU,UAAjD,oBAGA,2CAOZoB,IAASC,OAAO,cAACvC,EAAD,IAAUwC,SAASC,eAAe,W","file":"static/js/main.611f4770.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nfunction Main() {\n  const [login, setLogin] = React.useState(true);\n  const [username, setUsername] = React.useState(\"\");\n  const [passwd, setPasswd] = React.useState(\"\");\n  const [status, setStatus] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  function handleNameChange(event) {\n    setUsername(event.target.value);\n  }\n  function handlePasswdChange(event) {\n    setPasswd(event.target.value);\n  }\n  function submitLogin() {\n    setLoading(true);\n    if (username !== \"\" && passwd !== \"\") {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username: username, passwd: passwd })\n      };\n      fetch(\n        \"https://login-backend.divu050704.repl.co/api/login\",\n        requestOptions\n      )\n        .then((res) => res.json())\n        .then((last) => {\n          last !== null\n            ? setStatus(\"Logged in as \" + last.username)\n            : setStatus(\"Wrong username or password\");\n          setLoading(false);\n        });\n    } else {\n      setStatus(\"All fields are required\");\n      setLoading(false);\n    }\n  }\n  function submitSignup() {\n    if (username !== \"\" && passwd !== \"\") {\n      setLoading(true);\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username: username, passwd: passwd })\n      };\n      fetch(\n        \"https://login-backend.divu050704.repl.co/api/signup\",\n        requestOptions\n      )\n        .then((res) => res.json())\n        .then((last) => {\n          last.Created === \"OK\"\n            ? setStatus(\"Account Created!\")\n            : setStatus(\"Account already exists\");\n          setLoading(false);\n        });\n    } else {\n      setStatus(\"All fields are required\");\n    }\n  }\n  return (\n    <div>\n      {login && (\n        <div className=\"main\">\n          <div className=\"card\">\n            <h3>{status === \"\" ? <br></br> : status}</h3>\n            <label htmlFor=\"username\" className=\"label\">\n              Username\n            </label>\n            &nbsp;&nbsp;\n            <input\n              id=\"username\"\n              value={username}\n              onChange={handleNameChange}\n              className=\"input\"\n              autoComplete=\"off\"\n            ></input>\n            <br></br>\n            <br></br>\n            <label htmlFor=\"password\" className=\"label\">\n              Password\n            </label>\n            &nbsp;&nbsp;&nbsp;\n            <input\n              id=\"passwd\"\n              type=\"password\"\n              value={passwd}\n              onChange={handlePasswdChange}\n              className=\"input\"\n              autoComplete=\"off\"\n            ></input>\n            <br></br>\n            <br></br>\n            <button\n              onClick={submitLogin}\n              className={!loading ? \"button1\" : \"button1--loading\"}\n            >\n              Log in\n            </button>\n            <br></br>\n            <br></br>\n            <h2>OR</h2>\n            <button onClick={() => setLogin(false)} className=\"button2\">\n              Sign up\n            </button>\n            <h3> </h3>\n          </div>\n        </div>\n      )}\n      {!login && (\n        <div class=\"main\">\n          <div className=\"card\">\n            <h3>{status === \"\" ? <br></br> : status}</h3>\n            <label htmlFor=\"username\" className=\"label\">\n              Username\n            </label>\n            &nbsp;&nbsp;\n            <input\n              id=\"username\"\n              value={username}\n              className=\"input\"\n              onChange={handleNameChange}\n              autoComplete=\"off\"\n            ></input>\n            <br></br>\n            <br></br>\n            <label htmlFor=\"password\" className=\"label\">\n              Password\n            </label>\n            &nbsp;&nbsp;&nbsp;\n            <input\n              id=\"passwd\"\n              value={passwd}\n              className=\"input\"\n              onChange={handlePasswdChange}\n              type=\"password\"\n              autoComplete=\"\"\n            ></input>\n            <br></br>\n            <br></br>\n            <button\n              onClick={submitSignup}\n              className={!loading ? \"button1\" : \"button1--loading\"}\n            >\n              Sign Up\n            </button>\n            <br></br>\n            <br></br>\n            <h2>OR</h2>\n            <button onClick={() => setLogin(true)} className=\"button2\">\n              Log in\n            </button>\n            <h3> </h3>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}